# vip.py
from datetime import datetime
import json
import os

vip_users: set[int] = set()
vip_usernames: set[str] = set()
avatars: dict[int, str] = {}
DEFAULT_AVATAR: str = "ü§ñ"
VIP_ICON: str = "üíé"
signatures: dict[int, str] = {}

vip_user_map: dict[int, str] = {}
subscriptions: dict[int, datetime] = {}

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ: —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è VIP
custom_symbols: dict[int, str] = {}

VIP_DATA_FILE = os.path.join(os.path.dirname(__file__), 'vip_data.json')

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ VIP-–¥–∞–Ω–Ω—ã—Ö
def load_vip_data() -> None:
    if os.path.exists(VIP_DATA_FILE):
        with open(VIP_DATA_FILE, 'r', encoding='utf-8') as f:
            data = json.load(f)
            vip_users.update(data.get('vip_users', []))
            vip_usernames.update(data.get('vip_usernames', []))
            avatars.update(data.get('avatars', {}))
            signatures.update(data.get('signatures', {}))
            custom_symbols.update(data.get('custom_symbols', {}))
            subscriptions.update({int(k): datetime.fromisoformat(v) for k, v in data.get('subscriptions', {}).items()})

def save_vip_data() -> None:
    data = {
        'vip_users': list(vip_users),
        'vip_usernames': list(vip_usernames),
        'avatars': avatars,
        'signatures': signatures,
        'custom_symbols': custom_symbols,
        'subscriptions': {str(k): v.isoformat() for k, v in subscriptions.items()}
    }
    with open(VIP_DATA_FILE, 'w', encoding='utf-8') as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –º–æ–¥—É–ª—è
load_vip_data()

def is_vip(user_id: int) -> bool:
    return user_id in vip_users


def is_vip_by_username(username: str) -> bool:
    return username in vip_usernames


def add_vip(user_id: int, username: str = None) -> None:
    # –î–æ–±–∞–≤–ª—è–µ–º VIP –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –ø–æ–¥–ø–∏—Å–∫–∏
    vip_users.add(user_id)
    subscriptions[user_id] = datetime.now()
    if username:
        vip_user_map[user_id] = username
        vip_usernames.add(username)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    save_vip_data()


def remove_vip(user_id: int, username: str = None) -> bool:
    """–£–¥–∞–ª—è–µ—Ç VIP-—Å—Ç–∞—Ç—É—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        username: –Æ–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    
    Returns:
        bool: True –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –≤ VIP –∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω, False –µ—Å–ª–∏ –µ–≥–æ –Ω–µ –±—ã–ª–æ –≤ VIP
    """
    was_vip = False
    
    # –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ ID
    if user_id in vip_users:
        vip_users.remove(user_id)
        was_vip = True
        
        # –û—á–∏—â–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if user_id in subscriptions:
            del subscriptions[user_id]
        if user_id in avatars:
            del avatars[user_id]
        if user_id in signatures:
            del signatures[user_id]
        if user_id in custom_symbols:
            del custom_symbols[user_id]
            
        # –£–¥–∞–ª—è–µ–º –∏–∑ –º–∞–ø–ø–∏–Ω–≥–∞ –∏ username —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º
        if user_id in vip_user_map:
            stored_username = vip_user_map[user_id]
            if stored_username in vip_usernames:
                vip_usernames.remove(stored_username)
            del vip_user_map[user_id]
    
    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω username –∏ –æ–Ω –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ VIP-—é–∑–µ—Ä–Ω–µ–π–º–æ–≤
    if username and username in vip_usernames:
        vip_usernames.remove(username)
        was_vip = True
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if was_vip:
        save_vip_data()
    
    return was_vip


def set_avatar(user_id: int, emoji: str) -> None:
    avatars[user_id] = emoji
    save_vip_data()


def get_avatar(user_id: int) -> str:
    return avatars.get(user_id, DEFAULT_AVATAR)


def set_signature(user_id: int, text: str) -> None:
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    signatures[user_id] = text
    save_vip_data()


def get_signature(user_id: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É"""
    return signatures.get(user_id, "")


def get_subscription_time(user_id: int) -> datetime | None:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ None"""
    return subscriptions.get(user_id)


def set_symbol(user_id: int, emoji: str) -> None:
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å–∏–º–≤–æ–ª –¥–ª—è VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    custom_symbols[user_id] = emoji
    save_vip_data()


def get_symbol(user_id: int) -> str | None:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å–∏–º–≤–æ–ª VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ None"""
    return custom_symbols.get(user_id) 