from datetime import datetime
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes, CommandHandler, CallbackQueryHandler
from config import logger
from bot_state import get_all_chats
from vip import vip_users, subscriptions, vip_user_map

DEFAULT_BROADCAST_TEXT = (
    "üéâ –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ CrackNolikBot —Å –≤–∞–∂–Ω–æ–π –Ω–æ–≤–æ—Å—Ç—å—é! üéâ\n\n"
    "üíé –£ –Ω–∞—Å –ø–æ—è–≤–∏–ª–∞—Å—å VIP‚Äë–ø–æ–¥–ø–∏—Å–∫–∞! –û–Ω–∞ –¥–∞—Ä–∏—Ç:\n"
    "  ‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ç–µ–º—ã –∏ —ç–º–æ–¥–∑–∏  \n"
    "  ‚Ä¢ –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å—å –≤ –Ω–∞—á–∞–ª–µ –ø–∞—Ä—Ç–∏–∏  \n"
    "  ‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤ –±–æ—Ç—É  \n"
    "  ‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∂–∏–º—ã –∏–≥—Ä—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É  \n"
    "  ‚Ä¢ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã –∏ –∞–∫—Ü–∏–∏  \n\n"
    "üëâ –ß—Ç–æ–±—ã —Å—Ç–∞—Ç—å VIP, –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:/vip\n\n"
    "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ —á–µ—Ä–µ–∑ –∫—Ä–∏–ø—Ç–æ‚Äë–ø–ª–∞—Ç–µ–∂ –≤ USDT.  \n"
    "–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å –≤—ã–¥–µ–ª–∏—Ç—å—Å—è –∏ –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º—É–º –æ—Ç –∏–≥—Ä—ã!\n\n"
    "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏! üöÄ"
)

async def admin_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω‚Äë–ø–∞–Ω–µ–ª—å –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ"""
    # –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É
    if update.effective_user.username != 'sadea12':
        await update.message.reply_text('‚õî –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω‚Äë–ø–∞–Ω–µ–ª—å.')
        return
    # –¢–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ
    if update.effective_chat.type != 'private':
        await update.message.reply_text('‚ÑπÔ∏è –ê–¥–º–∏–Ω‚Äë–ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ —Å –±–æ—Ç–æ–º.')
        return
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton('üì¨ –†–∞—Å—Å—ã–ª–∫–∞', callback_data='admin_broadcast')],
        [InlineKeyboardButton('üíé –°—Ç–∞—Ç—É—Å VIP', callback_data='admin_vip_status')]
    ])
    await update.message.reply_text('üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', reply_markup=keyboard)

async def admin_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –≤ –∞–¥–º–∏–Ω‚Äë–ø–∞–Ω–µ–ª–∏"""
    query = update.callback_query
    await query.answer()
    data = query.data
    if data == 'admin_broadcast':
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å—Å—ã–ª–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        chats = get_all_chats()
        count = 0
        for chat_id in chats:
            try:
                await context.bot.send_message(chat_id=chat_id, text=DEFAULT_BROADCAST_TEXT)
                count += 1
            except Exception as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç {chat_id}: {e}")
        await query.edit_message_text(f'‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ {count} —á–∞—Ç–æ–≤.')
        return
    elif data == 'admin_vip_status':
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å VIP
        lines = ['üìä –°—Ç–∞—Ç—É—Å VIP:']
        for user_id in vip_users:
            start = subscriptions.get(user_id)
            name = vip_user_map.get(user_id, str(user_id))
            ts = start.strftime('%Y-%m-%d %H:%M:%S') if start else '‚Äî'
            lines.append(f"- {name}: {ts}")
        text = '\n'.join(lines)
        await query.edit_message_text(text)

# Handler objects
admin_panel_handler = CommandHandler('admin', admin_command)
admin_callback_handler = CallbackQueryHandler(admin_callback, pattern=r'^admin_') 