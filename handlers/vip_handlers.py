# handlers/vip_handlers.py

import os
import asyncio
from telegram import Update, Message
from telegram.ext import ContextTypes, CommandHandler
from aiosend import CryptoPay
from aiosend.types import Invoice
from vip import add_vip, set_avatar, get_avatar, is_vip, set_signature, get_signature, set_symbol
from config import logger

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CryptoPay
CRYPTO_TOKEN = os.getenv("CRYPTO_TOKEN")
if not CRYPTO_TOKEN:
    raise RuntimeError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è CRYPTO_TOKEN –¥–ª—è CryptoPay!")
cp = CryptoPay(CRYPTO_TOKEN)

async def vip_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—á–µ—Ç –¥–ª—è VIP-–ø–æ–¥–ø–∏—Å–∫–∏"""
    amount = 5  # —Ü–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ USDT
    asset = "USDT"
    invoice = await cp.create_invoice(amount, asset)
    await update.message.reply_text(
        f"üíé –û–ø–ª–∞—Ç–∏—Ç–µ VIP-–ø–æ–¥–ø–∏—Å–∫—É ({amount} {asset}): {invoice.mini_app_invoice_url}"
    )
    invoice.poll(message=update.message)

@cp.invoice_polling()
async def vip_payment_received(invoice: Invoice, message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞"""
    user_id = message.from_user.id
    username = message.from_user.username
    add_vip(user_id, username)
    await message.reply_text(
        "üéâ –û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞! –í—ã —Å—Ç–∞–ª–∏ VIP-–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º! üéâ"
    )

async def set_avatar_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ–π –∞–≤–∞—Ç–∞—Ä"""
    user_id = update.effective_user.id
    if not is_vip(user_id):
        await update.message.reply_text("‚õî –¢–æ–ª—å–∫–æ VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å –∞–≤–∞—Ç–∞—Ä.")
        return
    if not context.args:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setavatar <emoji>")
        return
    emoji = context.args[0]
    set_avatar(user_id, emoji)
    await update.message.reply_text(f"‚úÖ –í–∞—à –∞–≤–∞—Ç–∞—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {emoji}")

async def set_signature_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ—é –ø–æ–¥–ø–∏—Å—å –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
    user_id = update.effective_user.id
    if not is_vip(user_id):
        await update.message.reply_text("‚õî –¢–æ–ª—å–∫–æ VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å—å.")
        return
    if not context.args:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setsignature <—Ç–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏>")
        return
    text = " ".join(context.args)
    set_signature(user_id, text)
    await update.message.reply_text(f"‚úÖ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {text}")

async def setvip_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü—É sadea12 –≤—ã–¥–∞–≤–∞—Ç—å VIP-–ø–æ–¥–ø–∏—Å–∫—É –ª—é–±–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–æ –¥–æ—Å—Ç—É–ø–∞
    if update.effective_user.username != 'sadea12':
        await update.message.reply_text('‚õî –¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å VIP!')
        return
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if update.message.reply_to_message:
        target_user = update.message.reply_to_message.from_user
        user_id = target_user.id
        username = target_user.username
    elif context.args and context.args[0].isdigit():
        user_id = int(context.args[0])
        username = None
        try:
            chat_id = update.effective_chat.id
            member = await context.bot.get_chat_member(chat_id, user_id)
            username = member.user.username
        except Exception:
            pass
    else:
        await update.message.reply_text('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setvip <user_id> –∏–ª–∏ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ')
        return
    # –í—ã–¥–∞–µ–º VIP
    add_vip(user_id, username)
    target_name = username or user_id
    await update.message.reply_text(f'üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_name} —Ç–µ–ø–µ—Ä—å VIP!')

async def set_symbol_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∑–≤–æ–ª—è–µ—Ç VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ–π —Å–∏–º–≤–æ–ª"""
    user_id = update.effective_user.id
    if not is_vip(user_id):
        await update.message.reply_text("‚õî –¢–æ–ª—å–∫–æ VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å —Å–∏–º–≤–æ–ª.")
        return
    if not context.args:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setsymbol <—Å–∏–º–≤–æ–ª>")
        return
    symbol = context.args[0]
    set_symbol(user_id, symbol)
    await update.message.reply_text(f"‚úÖ –í–∞—à —Å–∏–º–≤–æ–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {symbol}")

async def viphelp_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –¥–ª—è VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    user_id = update.effective_user.id
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞: —Ç–æ–ª—å–∫–æ VIP –∏–ª–∏ –≤–ª–∞–¥–µ–ª–µ—Ü
    if not is_vip(user_id) and update.effective_user.username != 'sadea12':
        await update.message.reply_text("‚õî –¢–æ–ª—å–∫–æ VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–ª–∏ –≤–ª–∞–¥–µ–ª–µ—Ü –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.")
        return
    help_text = (
        "üíé –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n"
        "/setsymbol <emoji> - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ–π —Å–∏–º–≤–æ–ª –¥–ª—è –∏–≥—Ä—ã\n"
        "/setavatar <emoji> - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ–π –∞–≤–∞—Ç–∞—Ä –¥–ª—è –∏–≥—Ä—ã\n"
        "/setsignature <—Ç–µ–∫—Å—Ç> - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ—é –ø–æ–¥–ø–∏—Å—å\n"
        "/reset –∏–ª–∏ /resetgame - —Å–±—Ä–æ—Å–∏—Ç—å –∏–≥—Ä—É –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ\n"
        "/ban <@username –∏–ª–∏ user_id> –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ - –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        "/unban <@username –∏–ª–∏ user_id> –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ - —Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        "/viphelp - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    )
    await update.message.reply_text(help_text)

# Handler objects
vip_handler = CommandHandler("vip", vip_command)
setavatar_handler = CommandHandler("setavatar", set_avatar_command)
signature_handler = CommandHandler("setsignature", set_signature_command)
setvip_handler = CommandHandler("setvip", setvip_command)
setsymbol_handler = CommandHandler("setsymbol", set_symbol_command)
viphelp_handler = CommandHandler("viphelp", viphelp_command) 